/*
 * Xperiences API
 *
 * API for VR mentoring experiences
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: support@xperiences.ai
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using XperiencesAI.SDK.Model;
using XperiencesAI.SDK.Client;
using System.Reflection;

namespace XperiencesAI.SDK.Test.Model
{
    /// <summary>
    ///  Class for testing AgentCreate
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class AgentCreateTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for AgentCreate
        //private AgentCreate instance;

        public AgentCreateTests()
        {
            // TODO uncomment below to create an instance of AgentCreate
            //instance = new AgentCreate();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of AgentCreate
        /// </summary>
        [Fact]
        public void AgentCreateInstanceTest()
        {
            // TODO uncomment below to test "IsType" AgentCreate
            //Assert.IsType<AgentCreate>(instance);
        }

        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Fact]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }

        /// <summary>
        /// Test the property 'Description'
        /// </summary>
        [Fact]
        public void DescriptionTest()
        {
            // TODO unit test for the property 'Description'
        }

        /// <summary>
        /// Test the property 'PromptTemplate'
        /// </summary>
        [Fact]
        public void PromptTemplateTest()
        {
            // TODO unit test for the property 'PromptTemplate'
        }

        /// <summary>
        /// Test the property 'VarConfiguration'
        /// </summary>
        [Fact]
        public void VarConfigurationTest()
        {
            // TODO unit test for the property 'VarConfiguration'
        }
    }
}
